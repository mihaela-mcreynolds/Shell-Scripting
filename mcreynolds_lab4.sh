#!/bin/sh

# Mihaela McReynolds
# Scripting - Lab 4: Create a script that will generate a properly formatted HTML file (see out.html) based on a CSV
#(comma separated values) input file. The input file, input.csv is provided. The HTML file should present
# the data in a table with a border. The file generated by your script should look exactly like out.html

# HTML structure for table:
echo -e "<!DOCTYPE html>\n\t<head>\n\t\t<title>\n\t\t\tMcReynolds_Lab4\n\t\t</title>\n\t</head>\n\t<body>\n\t\t<table border=\"1\">"

# Each new line begins with <tr> and ends with </tr> (row)
# This part doesn't look like the output example, but headers should be headers: first line of the csv is headers, so mark each csv with <th></th>
# All the other lines are data, so each comma-separated value is marked with <td></td>
# Start and end the first table row, replace the commas in line 1 with heading tags; replace the end of each string with td tags; delete the beginning quotes
# Add style to the rows containing TN; make background yellow
# Insert beginning of the row and end of row tags; get rid of the extra cell

	echo $(sed -e '1 s;^.*$;<tr><th>&</th></tr>;g' \
		   -e '1 s;\,;</th><th>;g' \
		   -e 's;"\,;</td><td>;g' \
		   -e 's;";;g' \
 		   -e '2,$ s;.*TN.*;<tr style=\"background-color: yellow\"><td>&</td></tr>;g' \
    		   -e '2,$ s;^.*$;<tr><td>&</td></tr>;' \
                   -e 's;<tr><td><tr;<tr;g' $1) 


# HTML syntax to close the document
echo -e "\t\t</table>\n\t</body>\n<html>"
